
Diagnostics:
warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/reference-safety/v1-borrow-tests/factor_invalid_1.move:12:20
   │
12 │         foo(f_g, f);
   │                    ^

warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/reference-safety/v1-borrow-tests/factor_invalid_1.move:22:20
   │
22 │         bar(f, f_g);
   │                    ^


Diagnostics:
error: mutable reference in local `f` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-borrow-tests/factor_invalid_1.move:12:9
   │
 9 │         let f_g = &mut f.g;
   │                   -------- previous mutable field borrow
   ·
12 │         foo(f_g, f);
   │         ^^^^^^^^^^^ requirement enforced here

error: mutable reference in local `f` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-borrow-tests/factor_invalid_1.move:22:9
   │
19 │         let f_g = &mut f.g;
   │                   -------- previous mutable field borrow
   ·
22 │         bar(f, f_g);
   │         ^^^^^^^^^^^ requirement enforced here
