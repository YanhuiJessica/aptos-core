
Diagnostics:
warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/reference-safety/v1-borrow-tests/borrow_global_bad5.move:12:23
   │
12 │         T { v: _ } = t;
   │                       ^


Diagnostics:
error: cannot mutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-borrow-tests/borrow_global_bad5.move:9:22
   │
 8 │         let t1_ref = if (b) borrow_global_mut<T>(sender) else &mut t;
   │                             ---------------------------- previous mutable global borrow
 9 │         let t2_ref = borrow_global_mut<T>(sender);
   │                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable borrow attempted here
10 │         t1_ref;
   │         ------ requirement enforced here
