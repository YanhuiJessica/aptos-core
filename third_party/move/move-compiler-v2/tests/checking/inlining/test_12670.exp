
Diagnostics:
warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
  ┌─ tests/checking/inlining/test_12670.move:8:53
  │
8 │         for_each_ref(&xs , | e | {   sum = sum + e.x;});
  │                                                     ^

warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
  ┌─ tests/checking/inlining/test_12670.move:8:56
  │
8 │         for_each_ref(&xs , | e | {   sum = sum + e.x;});
  │                                                        ^

// -- Model dump before bytecode pipeline
module 0x1::Test {
    use std::vector::{for_each_ref};
    struct S {
        x: u8,
    }
    private fun foo(xs: vector<Test::S>) {
        {
          let sum: u8 = 0;
          {
            let (v: &vector<Test::S>): (&vector<Test::S>) = Tuple(Borrow(Immutable)(xs));
            {
              let i: u64 = 0;
              loop {
                if Lt<u64>(i, vector::length<Test::S>(v)) {
                  {
                    let (e: &Test::S): (&Test::S) = Tuple(vector::borrow<Test::S>(v, i));
                    sum: u8 = Add<u8>(sum, select Test::S.x<&Test::S>(e));
                    Tuple()
                  };
                  i: u64 = Add<u64>(i, 1)
                } else {
                  break
                }
              }
            }
          };
          Tuple()
        }
    }
} // end 0x1::Test


============ bytecode verification succeeded ========
