
Diagnostics:
warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
  ┌─ tests/checking/inlining/temp_shadowing.move:7:26
  │
7 │             sum = sum + a;
  │                          ^

warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/checking/inlining/temp_shadowing.move:16:37
   │
16 │             sum = nested(a, b) + sum;
   │                                     ^

// -- Model dump before bytecode pipeline
module 0x42::Test {
    public fun other(a: u64,b: u64): u64 {
        {
          let sum: u64 = 0;
          loop {
            if Lt<u64>(a, b) {
              a: u64 = Add<u64>(a, 1);
              sum: u64 = Add<u64>({
                let (a: u64, b: u64): (u64, u64) = Tuple(a, b);
                {
                  let sum: u64 = 0;
                  loop {
                    if Lt<u64>(a, b) {
                      a: u64 = Add<u64>(a, 1);
                      sum: u64 = Add<u64>(sum, a);
                      Tuple()
                    } else {
                      break
                    }
                  };
                  sum
                }
              }, sum);
              Tuple()
            } else {
              break
            }
          };
          sum
        }
    }
    public inline fun nested(a: u64,b: u64): u64 {
        {
          let sum: u64 = 0;
          loop {
            if Lt<u64>(a, b) {
              a: u64 = Add<u64>(a, 1);
              sum: u64 = Add<u64>(sum, a);
              Tuple()
            } else {
              break
            }
          };
          sum
        }
    }
    public fun test_shadowing() {
        {
          let z: u64 = Test::other(1, 4);
          if Eq<u64>(z, 10) {
            Tuple()
          } else {
            Abort(z)
          }
        }
    }
} // end 0x42::Test


============ bytecode verification succeeded ========
