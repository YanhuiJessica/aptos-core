
Diagnostics:
warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/checking/typing/mutate.move:10:26
   │
10 │         *&mut baz().f = 1;
   │                          ^

warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/checking/typing/mutate.move:18:22
   │
18 │         *&mut r.f = 1;
   │                      ^

// -- Model dump before bytecode pipeline
module 0x8675309::M {
    struct S {
        f: u64,
    }
    private fun bar(s: &mut M::S): &mut M::S {
        s
    }
    private fun baz(): M::S {
        pack M::S(0)
    }
    private fun foo(x: &mut u64): &mut u64 {
        x
    }
    private fun t0() {
        Borrow(Mutable)(0) = 1;
        Borrow(Mutable)(select M::S.f<M::S>(pack M::S(0))) = 1;
        M::foo(Borrow(Mutable)(0)) = 1;
        select M::S.f<&mut M::S>(M::bar(Borrow(Mutable)(pack M::S(0)))) = 1;
        Borrow(Mutable)(select M::S.f<&mut M::S>(M::bar(Borrow(Mutable)(pack M::S(0))))) = 1;
        select M::S.f<M::S>(M::baz()) = 1;
        Borrow(Mutable)(select M::S.f<M::S>(M::baz())) = 1;
        Tuple()
    }
    private fun t1() {
        {
          let r: &mut M::S = Borrow(Mutable)(pack M::S(0));
          r = pack M::S(1);
          select M::S.f<&mut M::S>(r) = 1;
          Borrow(Mutable)(select M::S.f<&mut M::S>(r)) = 1;
          Tuple()
        }
    }
} // end 0x8675309::M
