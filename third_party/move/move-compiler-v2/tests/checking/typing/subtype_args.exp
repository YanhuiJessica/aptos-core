
Diagnostics:
warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/checking/typing/subtype_args.move:14:18
   │
14 │         imm(&S{});
   │                  ^

warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/checking/typing/subtype_args.move:20:32
   │
20 │         imm_imm(&mut 0, &mut 0);
   │                                ^

warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/checking/typing/subtype_args.move:25:22
   │
25 │         f(&0, &mut 0);
   │                      ^

// -- Model dump before bytecode pipeline
module 0x8675309::M {
    struct S {
        dummy_field: bool,
    }
    private fun imm<T>(_x: &#0) {
        Tuple()
    }
    private fun imm_imm<T>(_x: &#0,_y: &#0) {
        Tuple()
    }
    private fun imm_mut<T>(_x: &#0,_y: &mut #0) {
        Tuple()
    }
    private fun mut_imm<T>(_x: &mut #0,_y: &#0) {
        Tuple()
    }
    private fun t0() {
        M::imm<u64>(Freeze(false)(Borrow(Mutable)(0)));
        M::imm<u64>(Borrow(Immutable)(0));
        M::imm<M::S>(Freeze(false)(Borrow(Mutable)(pack M::S(false))));
        M::imm<M::S>(Borrow(Immutable)(pack M::S(false)));
        Tuple()
    }
    private fun t1() {
        M::imm_mut<u64>(Freeze(false)(Borrow(Mutable)(0)), Borrow(Mutable)(0));
        M::mut_imm<u64>(Borrow(Mutable)(0), Freeze(false)(Borrow(Mutable)(0)));
        M::imm_imm<u64>(Freeze(false)(Borrow(Mutable)(0)), Freeze(false)(Borrow(Mutable)(0)));
        Tuple()
    }
    private inline fun t2(f: |(&u64, &mut u64)|) {
        (f)(Borrow(Mutable)(0), Borrow(Mutable)(0));
        (f)(Borrow(Immutable)(0), Borrow(Mutable)(0));
        Tuple()
    }
} // end 0x8675309::M
