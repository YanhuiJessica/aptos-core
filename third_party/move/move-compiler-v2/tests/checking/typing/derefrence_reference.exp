
Diagnostics:
warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
  ┌─ tests/checking/typing/derefrence_reference.move:8:20
  │
8 │         R{} = *&b.r;
  │                    ^

warning: A trailing `;` in an expression block implicitly adds a `()` value expression after the semicolon, not needed here.
   ┌─ tests/checking/typing/derefrence_reference.move:15:24
   │
15 │         R{} = *&mut b.r;
   │                        ^

// -- Model dump before bytecode pipeline
module 0x8675309::M {
    struct B {
        r: M::R,
    }
    struct R {
        dummy_field: bool,
    }
    private fun t0(r: &M::R,b: &M::B) {
        M::R{ dummy_field: _ }: M::R = Deref(r);
        M::B{ r: M::R{ dummy_field: _ } }: M::B = Deref(b);
        M::R{ dummy_field: _ }: M::R = Deref(Borrow(Immutable)(select M::B.r<&M::B>(b)));
        Tuple()
    }
    private fun t1(r: &mut M::R,b: &mut M::B) {
        M::R{ dummy_field: _ }: M::R = Deref(r);
        M::B{ r: M::R{ dummy_field: _ } }: M::B = Deref(b);
        M::R{ dummy_field: _ }: M::R = Deref(Borrow(Immutable)(select M::B.r<&mut M::B>(b)));
        M::R{ dummy_field: _ }: M::R = Deref(Borrow(Mutable)(select M::B.r<&mut M::B>(b)));
        Tuple()
    }
} // end 0x8675309::M
