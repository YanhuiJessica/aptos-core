processed 2 tasks

task 0 'publish'. lines 1-46:



>>> V1 Compiler {
== BEGIN Bytecode ==
// Move bytecode v6
module cafe.vectors {


make_big_vector(Arg0: u64): vector<u64> /* def_idx: 0 */ {
B0:
	0: MoveLoc[0](Arg0: u64)
	1: LdU64(1)
	2: LdU64(2)
	3: LdU64(3)
	4: LdU64(4)
	5: LdU64(5)
	6: LdU64(6)
	7: LdU64(7)
	8: LdU64(8)
	9: LdU64(9)
	10: LdU64(10)
	11: LdU64(11)
	12: LdU64(12)
	13: LdU64(13)
	14: LdU64(14)
	15: LdU64(15)
	16: LdU64(16)
	17: LdU64(17)
	18: LdU64(18)
	19: LdU64(19)
	20: LdU64(20)
	21: LdU64(21)
	22: LdU64(22)
	23: LdU64(23)
	24: LdU64(24)
	25: LdU64(25)
	26: LdU64(26)
	27: LdU64(27)
	28: LdU64(28)
	29: LdU64(29)
	30: LdU64(30)
	31: LdU64(31)
	32: LdU64(32)
	33: LdU64(33)
	34: LdU64(34)
	35: LdU64(35)
	36: LdU64(36)
	37: LdU64(37)
	38: LdU64(38)
	39: LdU64(39)
	40: LdU64(40)
	41: LdU64(41)
	42: LdU64(42)
	43: LdU64(43)
	44: LdU64(44)
	45: LdU64(45)
	46: LdU64(46)
	47: LdU64(47)
	48: LdU64(48)
	49: LdU64(49)
	50: LdU64(50)
	51: LdU64(51)
	52: LdU64(52)
	53: LdU64(53)
	54: LdU64(54)
	55: LdU64(55)
	56: LdU64(56)
	57: LdU64(57)
	58: LdU64(58)
	59: LdU64(59)
	60: LdU64(60)
	61: LdU64(61)
	62: LdU64(62)
	63: LdU64(63)
	64: LdU64(64)
	65: LdU64(65)
	66: LdU64(66)
	67: LdU64(67)
	68: LdU64(68)
	69: LdU64(69)
	70: LdU64(70)
	71: LdU64(71)
	72: LdU64(72)
	73: LdU64(73)
	74: LdU64(74)
	75: LdU64(75)
	76: LdU64(76)
	77: LdU64(77)
	78: LdU64(78)
	79: LdU64(79)
	80: LdU64(80)
	81: LdU64(81)
	82: LdU64(82)
	83: LdU64(83)
	84: LdU64(84)
	85: LdU64(85)
	86: LdU64(86)
	87: LdU64(87)
	88: LdU64(88)
	89: LdU64(89)
	90: LdU64(90)
	91: LdU64(91)
	92: LdU64(92)
	93: LdU64(93)
	94: LdU64(94)
	95: LdU64(95)
	96: LdU64(96)
	97: LdU64(97)
	98: LdU64(98)
	99: LdU64(99)
	100: LdU64(100)
	101: LdU64(101)
	102: LdU64(102)
	103: LdU64(103)
	104: LdU64(104)
	105: LdU64(105)
	106: LdU64(106)
	107: LdU64(107)
	108: LdU64(108)
	109: LdU64(109)
	110: LdU64(110)
	111: LdU64(111)
	112: LdU64(112)
	113: LdU64(113)
	114: LdU64(114)
	115: LdU64(115)
	116: LdU64(116)
	117: LdU64(117)
	118: LdU64(118)
	119: LdU64(119)
	120: LdU64(120)
	121: LdU64(121)
	122: LdU64(122)
	123: LdU64(123)
	124: LdU64(124)
	125: LdU64(125)
	126: LdU64(126)
	127: LdU64(127)
	128: LdU64(128)
	129: LdU64(129)
	130: LdU64(130)
	131: LdU64(131)
	132: LdU64(132)
	133: LdU64(133)
	134: LdU64(134)
	135: LdU64(135)
	136: LdU64(136)
	137: LdU64(137)
	138: LdU64(138)
	139: LdU64(139)
	140: LdU64(140)
	141: LdU64(141)
	142: LdU64(142)
	143: LdU64(143)
	144: LdU64(144)
	145: LdU64(145)
	146: LdU64(146)
	147: LdU64(147)
	148: LdU64(148)
	149: LdU64(149)
	150: LdU64(150)
	151: LdU64(151)
	152: LdU64(152)
	153: LdU64(153)
	154: LdU64(154)
	155: LdU64(155)
	156: LdU64(156)
	157: LdU64(157)
	158: LdU64(158)
	159: LdU64(159)
	160: LdU64(160)
	161: LdU64(161)
	162: LdU64(162)
	163: LdU64(163)
	164: LdU64(164)
	165: LdU64(165)
	166: LdU64(166)
	167: LdU64(167)
	168: LdU64(168)
	169: LdU64(169)
	170: LdU64(170)
	171: LdU64(171)
	172: LdU64(172)
	173: LdU64(173)
	174: LdU64(174)
	175: LdU64(175)
	176: LdU64(176)
	177: LdU64(177)
	178: LdU64(178)
	179: LdU64(179)
	180: LdU64(180)
	181: LdU64(181)
	182: LdU64(182)
	183: LdU64(183)
	184: LdU64(184)
	185: LdU64(185)
	186: LdU64(186)
	187: LdU64(187)
	188: LdU64(188)
	189: LdU64(189)
	190: LdU64(190)
	191: LdU64(191)
	192: LdU64(192)
	193: LdU64(193)
	194: LdU64(194)
	195: LdU64(195)
	196: LdU64(196)
	197: LdU64(197)
	198: LdU64(198)
	199: LdU64(199)
	200: LdU64(200)
	201: LdU64(201)
	202: LdU64(202)
	203: LdU64(203)
	204: LdU64(204)
	205: LdU64(205)
	206: LdU64(206)
	207: LdU64(207)
	208: LdU64(208)
	209: LdU64(209)
	210: LdU64(210)
	211: LdU64(211)
	212: LdU64(212)
	213: LdU64(213)
	214: LdU64(214)
	215: LdU64(215)
	216: LdU64(216)
	217: LdU64(217)
	218: LdU64(218)
	219: LdU64(219)
	220: LdU64(220)
	221: LdU64(221)
	222: LdU64(222)
	223: LdU64(223)
	224: LdU64(224)
	225: LdU64(225)
	226: LdU64(226)
	227: LdU64(227)
	228: LdU64(228)
	229: LdU64(229)
	230: LdU64(230)
	231: LdU64(231)
	232: LdU64(232)
	233: LdU64(233)
	234: LdU64(234)
	235: LdU64(235)
	236: LdU64(236)
	237: LdU64(237)
	238: LdU64(238)
	239: LdU64(239)
	240: LdU64(240)
	241: LdU64(241)
	242: LdU64(242)
	243: LdU64(243)
	244: LdU64(244)
	245: LdU64(245)
	246: LdU64(246)
	247: LdU64(247)
	248: LdU64(248)
	249: LdU64(249)
	250: LdU64(250)
	251: LdU64(251)
	252: LdU64(252)
	253: LdU64(253)
	254: LdU64(254)
	255: LdU64(255)
	256: LdU64(256)
	257: VecPack(0, 257)
	258: Ret
}
sum(Arg0: &vector<u64>): u64 /* def_idx: 1 */ {
L0:	loc1: u64
L1:	loc2: u64
L2:	loc3: &vector<u64>
B0:
	0: LdU64(0)
	1: StLoc[3](loc2: u64)
	2: MoveLoc[0](Arg0: &vector<u64>)
	3: StLoc[4](loc3: &vector<u64>)
	4: LdU64(0)
	5: StLoc[2](loc1: u64)
B1:
	6: CopyLoc[2](loc1: u64)
	7: CopyLoc[4](loc3: &vector<u64>)
	8: VecLen(0)
	9: Lt
	10: BrFalse(26)
B2:
	11: Branch(12)
B3:
	12: CopyLoc[4](loc3: &vector<u64>)
	13: CopyLoc[2](loc1: u64)
	14: VecImmBorrow(0)
	15: StLoc[1](loc0: &u64)
	16: MoveLoc[3](loc2: u64)
	17: MoveLoc[1](loc0: &u64)
	18: ReadRef
	19: Add
	20: StLoc[3](loc2: u64)
	21: MoveLoc[2](loc1: u64)
	22: LdU64(1)
	23: Add
	24: StLoc[2](loc1: u64)
	25: Branch(6)
B4:
	26: MoveLoc[4](loc3: &vector<u64>)
	27: Pop
	28: MoveLoc[3](loc2: u64)
	29: Ret
}
public test_big_vector() /* def_idx: 2 */ {
L0:	loc0: u64
L1:	loc1: u64
L2:	loc2: vector<u64>
B0:
	0: LdU64(0)
	1: Call make_big_vector(u64): vector<u64>
	2: StLoc[2](loc2: vector<u64>)
	3: ImmBorrowLoc[2](loc2: vector<u64>)
	4: VecLen(0)
	5: StLoc[0](loc0: u64)
	6: ImmBorrowLoc[2](loc2: vector<u64>)
	7: Call sum(&vector<u64>): u64
	8: StLoc[1](loc1: u64)
	9: CopyLoc[0](loc0: u64)
	10: LdU64(257)
	11: Eq
	12: BrFalse(14)
B1:
	13: Branch(16)
B2:
	14: MoveLoc[0](loc0: u64)
	15: Abort
B3:
	16: CopyLoc[1](loc1: u64)
	17: LdU64(32896)
	18: Eq
	19: BrFalse(21)
B4:
	20: Branch(23)
B5:
	21: MoveLoc[1](loc1: u64)
	22: Abort
B6:
	23: Ret
}
}
== END Bytecode ==
}
