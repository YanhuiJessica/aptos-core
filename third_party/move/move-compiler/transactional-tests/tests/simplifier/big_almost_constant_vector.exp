processed 2 tasks

task 0 'publish'. lines 1-46:



>>> V1 Compiler {
== BEGIN Bytecode ==
// Move bytecode v6
module cafe.vectors {


make_big_vector(Arg0: u8): vector<u8> /* def_idx: 0 */ {
B0:
	0: MoveLoc[0](Arg0: u8)
	1: LdU8(1)
	2: LdU8(2)
	3: LdU8(3)
	4: LdU8(4)
	5: LdU8(5)
	6: LdU8(6)
	7: LdU8(7)
	8: LdU8(8)
	9: LdU8(9)
	10: LdU8(10)
	11: LdU8(11)
	12: LdU8(12)
	13: LdU8(13)
	14: LdU8(14)
	15: LdU8(15)
	16: LdU8(16)
	17: LdU8(17)
	18: LdU8(18)
	19: LdU8(19)
	20: LdU8(20)
	21: LdU8(21)
	22: LdU8(22)
	23: LdU8(23)
	24: LdU8(24)
	25: LdU8(25)
	26: LdU8(26)
	27: LdU8(27)
	28: LdU8(28)
	29: LdU8(29)
	30: LdU8(30)
	31: LdU8(31)
	32: LdU8(32)
	33: LdU8(33)
	34: LdU8(34)
	35: LdU8(35)
	36: LdU8(36)
	37: LdU8(37)
	38: LdU8(38)
	39: LdU8(39)
	40: LdU8(40)
	41: LdU8(41)
	42: LdU8(42)
	43: LdU8(43)
	44: LdU8(44)
	45: LdU8(45)
	46: LdU8(46)
	47: LdU8(47)
	48: LdU8(48)
	49: LdU8(49)
	50: LdU8(50)
	51: LdU8(51)
	52: LdU8(52)
	53: LdU8(53)
	54: LdU8(54)
	55: LdU8(55)
	56: LdU8(56)
	57: LdU8(57)
	58: LdU8(58)
	59: LdU8(59)
	60: LdU8(60)
	61: LdU8(61)
	62: LdU8(62)
	63: LdU8(63)
	64: LdU8(64)
	65: LdU8(65)
	66: LdU8(66)
	67: LdU8(67)
	68: LdU8(68)
	69: LdU8(69)
	70: LdU8(70)
	71: LdU8(71)
	72: LdU8(72)
	73: LdU8(73)
	74: LdU8(74)
	75: LdU8(75)
	76: LdU8(76)
	77: LdU8(77)
	78: LdU8(78)
	79: LdU8(79)
	80: LdU8(80)
	81: LdU8(81)
	82: LdU8(82)
	83: LdU8(83)
	84: LdU8(84)
	85: LdU8(85)
	86: LdU8(86)
	87: LdU8(87)
	88: LdU8(88)
	89: LdU8(89)
	90: LdU8(90)
	91: LdU8(91)
	92: LdU8(92)
	93: LdU8(93)
	94: LdU8(94)
	95: LdU8(95)
	96: LdU8(96)
	97: LdU8(97)
	98: LdU8(98)
	99: LdU8(99)
	100: LdU8(100)
	101: LdU8(101)
	102: LdU8(102)
	103: LdU8(103)
	104: LdU8(104)
	105: LdU8(105)
	106: LdU8(106)
	107: LdU8(107)
	108: LdU8(108)
	109: LdU8(109)
	110: LdU8(110)
	111: LdU8(111)
	112: LdU8(112)
	113: LdU8(113)
	114: LdU8(114)
	115: LdU8(115)
	116: LdU8(116)
	117: LdU8(117)
	118: LdU8(118)
	119: LdU8(119)
	120: LdU8(120)
	121: LdU8(121)
	122: LdU8(122)
	123: LdU8(123)
	124: LdU8(124)
	125: LdU8(125)
	126: LdU8(126)
	127: LdU8(127)
	128: LdU8(128)
	129: LdU8(129)
	130: LdU8(130)
	131: LdU8(131)
	132: LdU8(132)
	133: LdU8(133)
	134: LdU8(134)
	135: LdU8(135)
	136: LdU8(136)
	137: LdU8(137)
	138: LdU8(138)
	139: LdU8(139)
	140: LdU8(140)
	141: LdU8(141)
	142: LdU8(142)
	143: LdU8(143)
	144: LdU8(144)
	145: LdU8(145)
	146: LdU8(146)
	147: LdU8(147)
	148: LdU8(148)
	149: LdU8(149)
	150: LdU8(150)
	151: LdU8(151)
	152: LdU8(152)
	153: LdU8(153)
	154: LdU8(154)
	155: LdU8(155)
	156: LdU8(156)
	157: LdU8(157)
	158: LdU8(158)
	159: LdU8(159)
	160: LdU8(160)
	161: LdU8(161)
	162: LdU8(162)
	163: LdU8(163)
	164: LdU8(164)
	165: LdU8(165)
	166: LdU8(166)
	167: LdU8(167)
	168: LdU8(168)
	169: LdU8(169)
	170: LdU8(170)
	171: LdU8(171)
	172: LdU8(172)
	173: LdU8(173)
	174: LdU8(174)
	175: LdU8(175)
	176: LdU8(176)
	177: LdU8(177)
	178: LdU8(178)
	179: LdU8(179)
	180: LdU8(180)
	181: LdU8(181)
	182: LdU8(182)
	183: LdU8(183)
	184: LdU8(184)
	185: LdU8(185)
	186: LdU8(186)
	187: LdU8(187)
	188: LdU8(188)
	189: LdU8(189)
	190: LdU8(190)
	191: LdU8(191)
	192: LdU8(192)
	193: LdU8(193)
	194: LdU8(194)
	195: LdU8(195)
	196: LdU8(196)
	197: LdU8(197)
	198: LdU8(198)
	199: LdU8(199)
	200: LdU8(200)
	201: LdU8(201)
	202: LdU8(202)
	203: LdU8(203)
	204: LdU8(204)
	205: LdU8(205)
	206: LdU8(206)
	207: LdU8(207)
	208: LdU8(208)
	209: LdU8(209)
	210: LdU8(210)
	211: LdU8(211)
	212: LdU8(212)
	213: LdU8(213)
	214: LdU8(214)
	215: LdU8(215)
	216: LdU8(216)
	217: LdU8(217)
	218: LdU8(218)
	219: LdU8(219)
	220: LdU8(220)
	221: LdU8(221)
	222: LdU8(222)
	223: LdU8(223)
	224: LdU8(224)
	225: LdU8(225)
	226: LdU8(226)
	227: LdU8(227)
	228: LdU8(228)
	229: LdU8(229)
	230: LdU8(230)
	231: LdU8(231)
	232: LdU8(232)
	233: LdU8(233)
	234: LdU8(234)
	235: LdU8(235)
	236: LdU8(236)
	237: LdU8(237)
	238: LdU8(238)
	239: LdU8(239)
	240: LdU8(240)
	241: LdU8(241)
	242: LdU8(242)
	243: LdU8(243)
	244: LdU8(244)
	245: LdU8(245)
	246: LdU8(246)
	247: LdU8(247)
	248: LdU8(248)
	249: LdU8(249)
	250: LdU8(250)
	251: LdU8(251)
	252: LdU8(252)
	253: LdU8(253)
	254: LdU8(254)
	255: LdU8(255)
	256: LdU8(0)
	257: VecPack(0, 257)
	258: Ret
}
sum(Arg0: &vector<u8>): u64 /* def_idx: 1 */ {
L0:	loc1: u64
L1:	loc2: u64
L2:	loc3: &vector<u8>
B0:
	0: LdU64(0)
	1: StLoc[3](loc2: u64)
	2: MoveLoc[0](Arg0: &vector<u8>)
	3: StLoc[4](loc3: &vector<u8>)
	4: LdU64(0)
	5: StLoc[2](loc1: u64)
B1:
	6: CopyLoc[2](loc1: u64)
	7: CopyLoc[4](loc3: &vector<u8>)
	8: VecLen(0)
	9: Lt
	10: BrFalse(27)
B2:
	11: Branch(12)
B3:
	12: CopyLoc[4](loc3: &vector<u8>)
	13: CopyLoc[2](loc1: u64)
	14: VecImmBorrow(0)
	15: StLoc[1](loc0: &u8)
	16: MoveLoc[3](loc2: u64)
	17: MoveLoc[1](loc0: &u8)
	18: ReadRef
	19: CastU64
	20: Add
	21: StLoc[3](loc2: u64)
	22: MoveLoc[2](loc1: u64)
	23: LdU64(1)
	24: Add
	25: StLoc[2](loc1: u64)
	26: Branch(6)
B4:
	27: MoveLoc[4](loc3: &vector<u8>)
	28: Pop
	29: MoveLoc[3](loc2: u64)
	30: Ret
}
public test_big_vector() /* def_idx: 2 */ {
L0:	loc0: u64
L1:	loc1: u64
L2:	loc2: vector<u8>
B0:
	0: LdU8(0)
	1: Call make_big_vector(u8): vector<u8>
	2: StLoc[2](loc2: vector<u8>)
	3: ImmBorrowLoc[2](loc2: vector<u8>)
	4: VecLen(0)
	5: StLoc[0](loc0: u64)
	6: ImmBorrowLoc[2](loc2: vector<u8>)
	7: Call sum(&vector<u8>): u64
	8: StLoc[1](loc1: u64)
	9: CopyLoc[0](loc0: u64)
	10: LdU64(257)
	11: Eq
	12: BrFalse(14)
B1:
	13: Branch(16)
B2:
	14: MoveLoc[0](loc0: u64)
	15: Abort
B3:
	16: CopyLoc[1](loc1: u64)
	17: LdU64(32640)
	18: Eq
	19: BrFalse(21)
B4:
	20: Branch(23)
B5:
	21: MoveLoc[1](loc1: u64)
	22: Abort
B6:
	23: Ret
}
}
== END Bytecode ==
}
